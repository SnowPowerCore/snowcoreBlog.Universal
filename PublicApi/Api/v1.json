{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "snowcoreBlog.Backend.ReadersManagement",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://localhost:5050"
    }
  ],
  "paths": {
    "/antiforgerytoken/v1": {
      "get": {
        "tags": [
          "Antiforgerytoken"
        ],
        "operationId": "GetAntiforgeryToken",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/captcha/challenge/v1": {
      "get": {
        "tags": [
          "Captcha"
        ],
        "operationId": "GetAltchaChallenge",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseForOpenApiOfAltchaChallenge"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/check/nickname/v1": {
      "post": {
        "tags": [
          "Check"
        ],
        "operationId": "CheckNickNameNotTaken",
        "requestBody": {
          "x-name": "CheckNickNameNotTakenDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckNickNameNotTakenDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseForOpenApiOfNickNameNotTakenCheckResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/create/confirm/email/v1": {
      "post": {
        "tags": [
          "Create"
        ],
        "operationId": "ConfirmCreateByEmail",
        "requestBody": {
          "x-name": "ConfirmCreateReaderAccountDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmCreateReaderAccountDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseForOpenApiOfReaderAccountCreatedDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/login/assertion/v1": {
      "post": {
        "tags": [
          "Login"
        ],
        "operationId": "LoginByAssertion",
        "requestBody": {
          "x-name": "LoginByAssertionDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginByAssertionDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseForOpenApiOfLoginByAssertionResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/request/assertion/v1": {
      "post": {
        "tags": [
          "Request"
        ],
        "operationId": "RequestAssertionOptions",
        "requestBody": {
          "x-name": "RequestAssertionOptionsDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAssertionOptionsDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseForOpenApiOfAssertionOptions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/create/attestation/v1": {
      "post": {
        "tags": [
          "Create"
        ],
        "operationId": "RequestAttestationOptions",
        "requestBody": {
          "x-name": "RequestAttestationOptionsDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestAttestationOptionsDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseForOpenApiOfCredentialCreateOptions"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/create/request/email/v1": {
      "post": {
        "tags": [
          "Create"
        ],
        "operationId": "RequestCreateByEmail",
        "requestBody": {
          "x-name": "RequestCreateReaderAccountDto",
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreateReaderAccountDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseForOpenApiOfRequestReaderAccountCreationResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiResponseForOpenApiOfAltchaChallenge": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AltchaChallenge"
              }
            ]
          },
          "DataCount": {
            "type": "integer",
            "format": "int32"
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AltchaChallenge": {
        "type": "object",
        "description": "An ALTCHA challenge that can be solved by the client-side widget.\n            ",
        "additionalProperties": false,
        "properties": {
          "Algorithm": {
            "type": "string",
            "description": "The algorithm to use.\n            ",
            "nullable": true
          },
          "Challenge": {
            "type": "string",
            "description": "The hash that the client should match as a hex string.\n            ",
            "nullable": true
          },
          "Salt": {
            "type": "string",
            "description": "The salt that the client should use to solve the challenge.\n            ",
            "nullable": true
          },
          "Signature": {
            "type": "string",
            "description": "Ensures the challenge is not tampered with by the client.\n            ",
            "nullable": true
          },
          "Maxnumber": {
            "type": "integer",
            "description": "The highest random number that the challenge could be.\n            ",
            "format": "int32"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Data": {
            "nullable": true
          },
          "DataCount": {
            "type": "integer",
            "format": "int32"
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "the dto used to send an error response to the client",
        "additionalProperties": false,
        "properties": {
          "StatusCode": {
            "type": "integer",
            "description": "the http status code sent to the client. default is 400.",
            "format": "int32",
            "default": 400
          },
          "Message": {
            "type": "string",
            "description": "the message for the error response",
            "default": "One or more errors occurred!"
          },
          "Errors": {
            "type": "object",
            "description": "the collection of errors for the current context",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "ApiResponseForOpenApiOfNickNameNotTakenCheckResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/NickNameNotTakenCheckResultDto"
              }
            ]
          },
          "DataCount": {
            "type": "integer",
            "format": "int32"
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "NickNameNotTakenCheckResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "WasTaken": {
            "type": "boolean"
          }
        }
      },
      "CheckNickNameNotTakenDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "NickName": {
            "type": "string"
          }
        }
      },
      "ApiResponseForOpenApiOfReaderAccountCreatedDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReaderAccountCreatedDto"
              }
            ]
          },
          "DataCount": {
            "type": "integer",
            "format": "int32"
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ReaderAccountCreatedDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "format": "guid"
          },
          "Email": {
            "type": "string"
          }
        }
      },
      "ConfirmCreateReaderAccountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Email": {
            "type": "string"
          },
          "VerificationToken": {
            "type": "string"
          },
          "AuthenticatorAttestation": {
            "$ref": "#/components/schemas/AuthenticatorAttestationRawResponse"
          }
        }
      },
      "AuthenticatorAttestationRawResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "rawId": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PublicKeyCredentialType"
              }
            ]
          },
          "response": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticatorAttestationRawResponse_AttestationResponse"
              }
            ]
          },
          "clientExtensionResults": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsClientOutputs"
              }
            ]
          }
        }
      },
      "PublicKeyCredentialType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "PublicKey",
          "Invalid"
        ],
        "enum": [
          "public-key",
          "invalid"
        ]
      },
      "AuthenticatorAttestationRawResponse_AttestationResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "attestationObject": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "clientDataJSON": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "transports": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AuthenticatorTransport"
            }
          }
        }
      },
      "AuthenticatorTransport": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Usb",
          "Nfc",
          "Ble",
          "SmartCard",
          "Hybrid",
          "Internal"
        ],
        "enum": [
          "usb",
          "nfc",
          "ble",
          "smart-card",
          "hybrid",
          "internal"
        ]
      },
      "AuthenticationExtensionsClientOutputs": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "example.extension.bool": {
            "type": "boolean",
            "nullable": true
          },
          "appid": {
            "type": "boolean"
          },
          "exts": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "uvm": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint64"
              }
            }
          },
          "credProps": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CredentialPropertiesOutput"
              }
            ]
          },
          "prf": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsPRFOutputs"
              }
            ]
          },
          "largeBlob": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsLargeBlobOutputs"
              }
            ]
          },
          "credProtect": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CredentialProtectionPolicy"
              }
            ]
          }
        }
      },
      "CredentialPropertiesOutput": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rk": {
            "type": "boolean"
          },
          "authenticatorDisplayName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AuthenticationExtensionsPRFOutputs": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "results": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsPRFValues"
              }
            ]
          }
        }
      },
      "AuthenticationExtensionsPRFValues": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "first": {
            "type": "string",
            "format": "byte"
          },
          "second": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        }
      },
      "AuthenticationExtensionsLargeBlobOutputs": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "supported": {
            "type": "boolean"
          },
          "blob": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "written": {
            "type": "boolean"
          }
        }
      },
      "CredentialProtectionPolicy": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "UserVerificationOptional",
          "UserVerificationOptionalWithCredentialIdList",
          "UserVerificationRequired"
        ],
        "enum": [
          "userVerificationOptional",
          "userVerificationOptionalWithCredentialIDList",
          "userVerificationRequired"
        ]
      },
      "ApiResponseForOpenApiOfLoginByAssertionResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LoginByAssertionResultDto"
              }
            ]
          },
          "DataCount": {
            "type": "integer",
            "format": "int32"
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LoginByAssertionResultDto": {
        "type": "object",
        "additionalProperties": false
      },
      "LoginByAssertionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Email": {
            "type": "string"
          },
          "AuthenticatorAssertion": {
            "$ref": "#/components/schemas/AuthenticatorAssertionRawResponse"
          }
        }
      },
      "AuthenticatorAssertionRawResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "rawId": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "response": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticatorAssertionRawResponse_AssertionResponse"
              }
            ]
          },
          "type": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PublicKeyCredentialType"
              }
            ]
          },
          "clientExtensionResults": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsClientOutputs"
              }
            ]
          }
        }
      },
      "AuthenticatorAssertionRawResponse_AssertionResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticatorData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "clientDataJSON": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "userHandle": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        }
      },
      "ApiResponseForOpenApiOfAssertionOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AssertionOptions"
              }
            ]
          },
          "DataCount": {
            "type": "integer",
            "format": "int32"
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AssertionOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "challenge": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "timeout": {
            "type": "integer",
            "format": "uint64"
          },
          "rpId": {
            "type": "string",
            "nullable": true
          },
          "allowCredentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicKeyCredentialDescriptor"
            }
          },
          "userVerification": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserVerificationRequirement"
              }
            ]
          },
          "hints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublicKeyCredentialHint"
            }
          },
          "extensions": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsClientInputs"
              }
            ]
          }
        }
      },
      "PublicKeyCredentialDescriptor": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PublicKeyCredentialType"
          },
          "id": {
            "type": "string",
            "format": "byte"
          },
          "transports": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AuthenticatorTransport"
            }
          }
        }
      },
      "UserVerificationRequirement": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Required",
          "Preferred",
          "Discouraged"
        ],
        "enum": [
          "required",
          "preferred",
          "discouraged"
        ]
      },
      "PublicKeyCredentialHint": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "SecurityKey",
          "ClientDevice",
          "Hybrid"
        ],
        "enum": [
          "security-key",
          "client-device",
          "hybrid"
        ]
      },
      "AuthenticationExtensionsClientInputs": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "example.extension.bool": {
            "type": "boolean",
            "nullable": true
          },
          "exts": {
            "type": "boolean",
            "nullable": true
          },
          "uvm": {
            "type": "boolean",
            "nullable": true
          },
          "credProps": {
            "type": "boolean",
            "nullable": true
          },
          "prf": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsPRFInputs"
              }
            ]
          },
          "largeBlob": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsLargeBlobInputs"
              }
            ]
          },
          "credentialProtectionPolicy": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CredentialProtectionPolicy"
              }
            ]
          },
          "enforceCredentialProtectionPolicy": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "AuthenticationExtensionsPRFInputs": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "eval": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsPRFValues"
              }
            ]
          },
          "evalByCredential": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/KeyValuePairOfStringAndAuthenticationExtensionsPRFValues"
              }
            ]
          }
        }
      },
      "KeyValuePairOfStringAndAuthenticationExtensionsPRFValues": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Key": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsPRFValues"
              }
            ]
          }
        }
      },
      "AuthenticationExtensionsLargeBlobInputs": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "support": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LargeBlobSupport"
              }
            ]
          },
          "read": {
            "type": "boolean"
          },
          "write": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        }
      },
      "LargeBlobSupport": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Required",
          "Preferred"
        ],
        "enum": [
          "required",
          "preferred"
        ]
      },
      "RequestAssertionOptionsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Email": {
            "type": "string"
          },
          "UserVerification": {
            "$ref": "#/components/schemas/UserVerificationRequirement"
          }
        }
      },
      "ApiResponseForOpenApiOfCredentialCreateOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CredentialCreateOptions"
              }
            ]
          },
          "DataCount": {
            "type": "integer",
            "format": "int32"
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CredentialCreateOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "rp": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PublicKeyCredentialRpEntity"
              }
            ]
          },
          "user": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Fido2User"
              }
            ]
          },
          "challenge": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "pubKeyCredParams": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PubKeyCredParam"
            }
          },
          "timeout": {
            "type": "integer",
            "format": "uint64"
          },
          "attestation": {
            "$ref": "#/components/schemas/AttestationConveyancePreference"
          },
          "attestationFormats": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AttestationStatementFormatIdentifier"
            }
          },
          "authenticatorSelection": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticatorSelection"
              }
            ]
          },
          "hints": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PublicKeyCredentialHint"
            }
          },
          "excludeCredentials": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PublicKeyCredentialDescriptor"
            }
          },
          "extensions": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticationExtensionsClientInputs"
              }
            ]
          }
        }
      },
      "PublicKeyCredentialRpEntity": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "icon": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Fido2User": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PubKeyCredParam": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PublicKeyCredentialType"
          },
          "alg": {
            "$ref": "#/components/schemas/COSE_Algorithm"
          }
        }
      },
      "COSE_Algorithm": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "RS1",
          "RS512",
          "RS384",
          "RS256",
          "ES256K",
          "PS512",
          "PS384",
          "PS256",
          "ES512",
          "ES384",
          "EdDSA",
          "ES256"
        ],
        "enum": [
          "RS1",
          "RS512",
          "RS384",
          "RS256",
          "ES256K",
          "PS512",
          "PS384",
          "PS256",
          "ES512",
          "ES384",
          "EdDSA",
          "ES256"
        ]
      },
      "AttestationConveyancePreference": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "None",
          "Indirect",
          "Direct",
          "Enterprise"
        ],
        "enum": [
          "none",
          "indirect",
          "direct",
          "enterprise"
        ]
      },
      "AttestationStatementFormatIdentifier": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Packed",
          "Tpm",
          "AndroidKey",
          "AndroidSafetyNet",
          "FidoU2f",
          "Apple",
          "None"
        ],
        "enum": [
          "packed",
          "tpm",
          "android-key",
          "android-safetynet",
          "fido-u2f",
          "apple",
          "none"
        ]
      },
      "AuthenticatorSelection": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "authenticatorAttachment": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticatorAttachment"
              }
            ]
          },
          "residentKey": {
            "$ref": "#/components/schemas/ResidentKeyRequirement"
          },
          "userVerification": {
            "$ref": "#/components/schemas/UserVerificationRequirement"
          }
        }
      },
      "AuthenticatorAttachment": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Platform",
          "CrossPlatform"
        ],
        "enum": [
          "platform",
          "cross-platform"
        ]
      },
      "ResidentKeyRequirement": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Required",
          "Preferred",
          "Discouraged"
        ],
        "enum": [
          "required",
          "preferred",
          "discouraged"
        ]
      },
      "RequestAttestationOptionsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Email": {
            "type": "string"
          },
          "VerificationToken": {
            "type": "string"
          },
          "AuthenticatorAttachment": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AuthenticatorAttachment"
              }
            ]
          },
          "AttestationType": {
            "$ref": "#/components/schemas/AttestationConveyancePreference"
          },
          "ResidentKey": {
            "$ref": "#/components/schemas/ResidentKeyRequirement"
          },
          "UserVerification": {
            "$ref": "#/components/schemas/UserVerificationRequirement"
          }
        }
      },
      "ApiResponseForOpenApiOfRequestReaderAccountCreationResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Data": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RequestReaderAccountCreationResultDto"
              }
            ]
          },
          "DataCount": {
            "type": "integer",
            "format": "int32"
          },
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          },
          "Errors": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RequestReaderAccountCreationResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "RequestCreateReaderAccountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Email": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "NickName": {
            "type": "string"
          },
          "ConfirmedAgreement": {
            "type": "boolean"
          },
          "LastName": {
            "type": "string"
          },
          "PhoneNumber": {
            "type": "string"
          },
          "InitialEmailConsent": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "JWTBearerAuth": {
        "type": "http",
        "description": "Enter a JWT token to authorize the requests...",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}